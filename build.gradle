plugins {
    id 'base'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.14.0'
    id 'org.ajoberstar.git-publish' version '2.1.3'
}

allprojects {
    group = 'com.bmuschko'
    version = '2.8.0'
}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply from: "$rootProject.projectDir/gradle/integration-test.gradle"
    apply from: "$rootProject.projectDir/gradle/functional-test.gradle"

    def compatibilityVersion = JavaVersion.VERSION_1_8
    sourceCompatibility = compatibilityVersion
    targetCompatibility = compatibilityVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation('org.spockframework:spock-core:1.2-groovy-2.5') {
            exclude group: 'org.codehaus.groovy'
        }
        testImplementation 'org.apache.commons:commons-lang3:3.3'
    }
}

jar.enabled = false

task uberJar(type: Jar, dependsOn: subprojects.assemble) {
    description = 'Creates Uberjar.'

    subprojects.each { project ->
        from project.configurations.archives.allArtifacts.files.collect { zipTree(it) }
    }

    manifest {
        attributes 'Implementation-Title': 'Gradle Tomcat plugin',
                   'Implementation-Version': project.version.toString(),
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty('java.version'),
                   'Built-Gradle': gradle.gradleVersion
    }
}

task sourcesJar(type: Jar) {
    description = 'Creates sources JAR.'
    archiveClassifier = 'sources'

    subprojects.each { project ->
        from project.sourceSets.main.allSource
    }
}

ext.groovyDocsDir = 'build/docs/groovydoc'

task aggregateGroovydocs(type: Groovydoc, dependsOn: subprojects.groovydoc) {
    description = 'Creates Groovydocs.'

    ext.title = "Gradle Tomcat plugin ($version)"
    docTitle title
    windowTitle title
    source subprojects.groovydoc.source
    destinationDir file(groovyDocsDir)
    classpath = files(subprojects.groovydoc.classpath)
    groovyClasspath = project(':plugin').groovydoc.groovyClasspath
}

task groovydocJar(type: Jar, dependsOn: aggregateGroovydocs) {
    description = 'Creates GroovyDocs JAR.'
    archiveClassifier = 'javadoc'

    from groovyDocsDir
}

task createAllDeliverables(dependsOn: [uberJar, sourcesJar, groovydocJar]) {
    description = 'Creates all deliverables including plugin JAR, sources JAR and Groovydoc JAR.'
}

task aggregateTestReports(type: TestReport) {
    destinationDir = file("$buildDir/reports/all-tests")
    reportOn subprojects*.test, subprojects*.integrationTest
}

check.dependsOn aggregateTestReports

artifacts {
    archives uberJar
    archives sourcesJar
    archives groovydocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact uberJar
        }
    }
}

pluginBundle {
    website = "https://github.com/bmuschko/gradle-tomcat-plugin"
    vcsUrl = "https://github.com/bmuschko/gradle-tomcat-plugin"
    tags = ['gradle', 'tomcat', 'web', 'container', 'embedded']

    mavenCoordinates {
        groupId = project.group.toString()
        artifactId = project.name
        version = project.version.toString()
    }

    plugins {
        tomcatBasePlugin {
            id = 'com.bmuschko.tomcat-base'
            displayName = 'Gradle Tomcat Base Plugin'
            description = 'Plugin that provides custom task types for interacting with an embedded Tomcat web container.'
        }
        tomcatPlugin {
            id = 'com.bmuschko.tomcat'
            displayName = 'Gradle Tomcat Plugin'
            description = 'Plugin that provides tasks for deploying your web application to an embedded Tomcat web container.'
        }
    }
}

gitPublish {
    repoUri = 'git@github.com:bmuschko/gradle-tomcat-plugin.git'
    branch = 'gh-pages'

    contents {
        from(aggregateGroovydocs.outputs.files) {
            into 'docs/groovydoc'
        }
    }
}

gitPublishCopy.dependsOn subprojects*.javadoc, subprojects*.groovydoc
